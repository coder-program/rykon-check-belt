version: "3.9"

services:
  postgres:
    image: postgres:14
    container_name: gestao-postgres-prod
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    networks:
      - app-network
    # Não expor porta diretamente em produção

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.1
    container_name: gestao-keycloak-prod
    command: start --optimized --import-realm
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/${DB_NAME}
      KC_DB_USERNAME: ${DB_USER}
      KC_DB_PASSWORD: ${DB_PASS}
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_HOSTNAME: ${DOMAIN}
      KC_PROXY: edge
      KC_HTTP_ENABLED: true
    volumes:
      - ./keycloak/realm/:/opt/keycloak/data/import/
    networks:
      - app-network
    depends_on:
      - postgres

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: gestao-backend-prod
    restart: always
    env_file:
      - ./backend/.env.production
    networks:
      - app-network
    depends_on:
      - postgres
      - keycloak

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: gestao-frontend-prod
    restart: always
    networks:
      - app-network
    depends_on:
      - backend

  nginx:
    image: nginx:alpine
    container_name: gestao-nginx-prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    networks:
      - app-network
    depends_on:
      - frontend
      - backend
      - keycloak

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
